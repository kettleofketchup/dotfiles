
format = """
[╭](fg:current_line)\
$os \
$directory\
$git_branch\
$git_status\
$fill\
$nodejs\
$dotnet\
$python\
$java\
$golang\
$c\
$cmd_duration\
${custom.shell_conditional}\
${custom.time_conditional}\
${custom.username_conditional}\
$line_break\
$character\
"""

# $username\

palette = 'dracula'
add_newline = true

[palettes.dracula]
foreground = '#F8F8F2'
background = '#282A36'
current_line = '#44475A'
primary = '#1E1F29'
box = '#44475A'
blue	= '#6272A4'
cyan = '#8BE9FD'
green	= '#50FA7B'
orange = '#FFB86C'
pink = '#FF79C6'
purple = '#BD93F9'
red	= '#FF5555'
yellow = '#F1FA8C'


[custom.docker]
description = "Shows the docker symbol if the current directory has Dockerfile or docker-compose.yml files"
command = "echo 🐳"
files = ["Dockerfile", "docker-compose.yml", "docker-compose.yaml"]
when = """ command -v docker &> /dev/null; exit (echo $?); """

[custom.shell_conditional]
command = """case $SHELL in
    */zsh) echo "zsh";;
    */bash) echo "bash";;
    *) echo "shell";;
  esac"""
format = '[─](fg:current_line)[](fg:blue)[ ](fg:primary bg:blue)[](fg:blue bg:box)[$output](fg:foreground bg:box)[](fg:box)'
unknown_indicator = 'shell'
when = """[ $COLUMNS -gt 80 ]"""

[custom.time_conditional]
command = '''echo $(date +%H:%M)'''
format = '[─](fg:current_line)[](fg:purple)[󰦖 ](fg:primary bg:purple)[](fg:purple bg:box)[ $output](fg:foreground bg:box)[](fg:box)'
when = """[ $COLUMNS -gt 140 ]"""

[time]
time_format = '%H:%M'
disabled = false

[custom.username_conditional]
command = '''echo $USER'''
format = '[─](fg:current_line)[](fg:yellow)[ ](fg:primary bg:yellow)[](fg:yellow bg:box)[ $output](fg:foreground bg:box)[](fg:box) '
when = """[ $COLUMNS -gt 140 ]"""

[username]
format = '[─](fg:current_line)[](fg:yellow)[ ](fg:primary bg:yellow)[](fg:yellow bg:box)[ $user](fg:foreground bg:box)[](fg:box) '
show_always = true

[os]
format = '(fg:current_line)[](fg:red)[$symbol ](fg:primary bg:red)[](fg:red)'
disabled = false

[os.symbols]
Alpine = ''
Amazon = ''
Android = ''
Arch = ''
CentOS = ''
Debian = ''
EndeavourOS = ''
Fedora = ''
FreeBSD = ''
Garuda = ''
Gentoo = ''
Linux = ''
Macos = ''
Manjaro = ''
Mariner = ''
Mint = ''
NetBSD = ''
NixOS = ''
OpenBSD = ''
OpenCloudOS = ''
openEuler = ''
openSUSE = ''
OracleLinux = '⊂⊃'
Pop = ''
Raspbian = ''
Redhat = ''
RedHatEnterprise = ''
Solus = ''
SUSE = ''
Ubuntu = ''
Unknown = ''
Windows = ''




[git_metrics]
added_style = 'bold blue'
format = '[+$added]($added_style)/[-$deleted]($deleted_style) '



[directory]
format = '[─](fg:current_line)[](fg:pink)[󰷏 ](fg:primary bg:pink)[$before_root_path](fg:pink bg:box)[ $read_only$truncation_symbol$path](fg:foreground bg:box)[](fg:box)'
home_symbol = " "
truncation_symbol = '/'
truncation_length = 4
#truncation_symbol = '/'
read_only = '󱧵 '
read_only_style = 'red '
truncate_to_repo = false



[git_branch]
format = '[─](fg:current_line)[](fg:green)[$symbol](fg:primary bg:green)[](fg:green bg:box)[ $branch](fg:foreground bg:box)'
symbol = ' '


[git_status]

conflicted = '[\(🏳$count\)](fg:green bg:box)'
ahead = '[\(⇡$count\)](fg:green bg:box)'
behind = '[\(⇣$count\)](fg:green bg:box)'
diverged = '[\(⇕$count\)](fg:green bg:box)'
up_to_date = '[\(✓$count\)](fg:green bg:box)'
untracked = '[\(?$count\)](fg:purple bg:box)'
stashed = '[\(📦$count\)](fg:green bg:box)'
modified = '[\(!$count\)](fg:green bg:box)'
staged = '[\(+$count\)](fg:green bg:box)'
renamed = '[\(»$count\)](fg:red bg:box)'
deleted = '[\(✘$count\)](fg:red bg:box)'
style = "fg:primary bg:box"

format = "[](fg:box bg:box)[$all_status](fg:box bg:box)[](fg:box)"

[nodejs]
format = '[─](fg:current_line)[](fg:green)[$symbol](fg:primary bg:green)[](fg:green bg:box)[ $version](fg:foreground bg:box)[](fg:box)'
symbol = '󰎙 Node.js'

[dotnet]
format = '[─](fg:current_line)[](fg:purple)[$symbol](fg:primary bg:purple)[](fg:purple bg:box)[ $tfm](fg:foreground bg:box)[](fg:box)'
symbol = ' .NET'


[golang]
format = '[─](fg:current_line)[](fg:orange)[$symbol](fg:primary bg:orange)[](fg:orange bg:box)[ $version](fg:foreground bg:box)[](fg:box)'


[python]
format = '[─](fg:current_line)[](fg:green)[$symbol](fg:primary bg:green)[](fg:green bg:box)[ $version](fg:foreground bg:box)[](fg:box)'
symbol = ' python'

[java]
format = '[─](fg:current_line)[](fg:red)[$symbol](fg:primary bg:red)[](fg:red bg:box)[ $version](fg:foreground bg:box)[](fg:box)'
symbol = ' Java'

[c]
format = '[─](fg:current_line)[](fg:blue)[$symbol](fg:primary bg:blue)[](fg:blue bg:box)[ $version](fg:foreground bg:box)[](fg:box)'
symbol = ' C'

[fill]
symbol = '─'
style = 'fg:current_line'

[cmd_duration]
min_time = 500
format = '[─](fg:current_line)[](fg:orange)[ ](fg:primary bg:orange)[](fg:orange bg:box)[ $duration ](fg:foreground bg:box)[](fg:box)'

[shell]
format = '[─](fg:current_line)[](fg:blue)[ ](fg:primary bg:blue)[](fg:blue bg:box)[ $indicator](fg:foreground bg:box)[](fg:box)'
unknown_indicator = 'shell'
powershell_indicator = 'powershell'
fish_indicator = 'fish'
disabled = false



[character]
format = """
[╰─$symbol](fg:current_line) """
success_symbol = '[󱜼](fg:bold white)'
error_symbol = '[×](fg:bold red)'
